# Check NEORV32 software framework and test processor

name: Processor

on:
  push:
    branches:
    - master
    paths:
    - 'rtl/**'
    - 'sw/**'
    - 'sim/**'
  pull_request:
    branches:
    - master
    paths:
    - 'rtl/**'
    - 'sw/**'
    - 'sim/**'
  workflow_dispatch:

jobs:


  Processor:
    runs-on: ubuntu-latest
    name: 'üêß Ubuntu | Shell script'

    steps:

    - name: 'üß∞ Repository Checkout'
      uses: actions/checkout@v2

    - name: 'üîß Setup Environment Variables'
      run: |
        echo "$GITHUB_WORKSPACE/riscv/bin" >> $GITHUB_PATH
        echo $GITHUB_WORKSPACE

    - name: '‚öôÔ∏è Setup RISC-V GCC'
      run: |
        mkdir riscv
        curl -fsSL https://github.com/stnolting/riscv-gcc-prebuilt/releases/download/rv32i-2.0.0/riscv32-unknown-elf.gcc-10.2.0.rv32i.ilp32.newlib.tar.gz | \
        tar -xzf - -C riscv
        ls -al riscv

    - name: '‚öôÔ∏è Setup GHDL Simulator'
      uses: ghdl/setup-ghdl-ci@nightly
      with:
        backend: llvm

    - name: 'üöß Run Software Framework Tests'
      run: ./sw/example/processor_check/check.sh

    - name: 'üöß Run Processor Hardware Tests with shell script'
      run: ./sim/ghdl/ghdl_sim.sh


  VUnit-Container:
    runs-on: ubuntu-latest
    name: 'üõ≥Ô∏è Container | VUnit'

    steps:

    - name: 'üß∞ Repository Checkout'
      uses: actions/checkout@v2

    - name: 'üîß Setup Environment Variables'
      run: |
        echo "$GITHUB_WORKSPACE/riscv/bin" >> $GITHUB_PATH
        echo $GITHUB_WORKSPACE

    - name: '‚öôÔ∏è Setup RISC-V GCC'
      run: |
        mkdir riscv
        curl -fsSL https://github.com/stnolting/riscv-gcc-prebuilt/releases/download/rv32i-2.0.0/riscv32-unknown-elf.gcc-10.2.0.rv32i.ilp32.newlib.tar.gz | \
        tar -xzf - -C riscv
        ls -al riscv

    - name: '‚öôÔ∏è Build and install Processor Check software'
      run: |
        make -C sw/example/processor_check \
          clean_all \
          USER_FLAGS+=-DRUN_CHECK \
          USER_FLAGS+=-DUART0_SIM_MODE \
          MARCH=-march=rv32imac \
          info \
          all

    - name: 'üì§ Archive Processor Check application image'
      uses: actions/upload-artifact@v2
      with:
        name: application
        path: rtl/core/neorv32_application_image.vhd

    - name: 'üöß Run Processor Hardware Tests with VUnit'
      uses: VUnit/vunit_action@master
      with:
        cmd: ./sim/run.py --ci-mode -v


  VUnit-MSYS2:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          {icon: '‚¨õ', installs: 'MINGW32', arch: i686,   pkg: 'mcode' },
          {icon: 'üü¶', installs: 'MINGW64', arch: x86_64, pkg: 'llvm'  },
        ]
    name: '${{ matrix.icon }} ${{ matrix.installs }} | VUnit'
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: '‚öôÔ∏è git config'
      run: git config --global core.autocrlf input
      shell: bash

    - name: 'üß∞ Checkout'
      uses: actions/checkout@v2
      with:
        # The command 'git describe' (used for version) needs the history.
        fetch-depth: 0

    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.installs }}
        update: true
        install: >
          make
          mingw-w64-${{ matrix.arch }}-ghdl-${{ matrix.pkg }}
          mingw-w64-${{ matrix.arch }}-python-pip
          mingw-w64-${{ matrix.arch }}-riscv64-unknown-elf-gcc

    - name: '‚öôÔ∏è Build and install Processor Check software'
      run: |
        make -C sw/example/processor_check \
          RISCV_TOOLCHAIN=riscv64-unknown-elf \
          clean_all \
          USER_FLAGS+=-DRUN_CHECK \
          USER_FLAGS+=-DUART0_SIM_MODE \
          MARCH=-march=rv32imac \
          info \
          all

    - name: 'üêç Install VUnit'
      run: pip install vunit_hdl

    - name: 'üöß Run Processor Hardware Tests with VUnit'
      run: ./sim/run.py --ci-mode -v
